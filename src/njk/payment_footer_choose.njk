<div id="main-content-footer-container">
  <div class="footer-container footer-backbtn-container" id="choose-payment-footer-left">
    <div id="back-btn">
      <button type="button" name="back-button" onclick="navigateBackToPaymentPage()">BACK</button>

    </div>
  </div>

  <div class="footer-container" id="choose-payment-footer-right">
    <div id="cash-container-btn">
      <button id="cash-button" type="button" name="cash-button" onclick="location.href='/payment-pages/{{OrderID}}?page=cash'">Kontant</button>
    </div>

    <div id="stripe-container-btn">
	    <script src="https://checkout.stripe.com/checkout.js"></script>
	    <button id="stripe-button" class="button" type="button" name="card-button">Card</button>

    </div>

    <div id="paypal-container-btn" onload="paypal-payment()" >
       <script src="https://www.paypalobjects.com/api/checkout.js"></script>
       <script>
       
  
  	// Render the PayPal button
	paypal.Button.render({
    
    // Set your environment
    env: 'sandbox', // sandbox | production
  
    // Specify the style of the button
    style: {
      layout: 'horizontal',  // horizontal | vertical
      size:   'medium',    // medium | large | responsive
      shape:  'pill',      // pill | rect
      color:  'black'       // gold | blue | silver | white | black
    },
  
    // Specify allowed and disallowed funding sources
    //
    // Options:
    // - paypal.FUNDING.CARD
    // - paypal.FUNDING.CREDIT
    // - paypal.FUNDING.ELV
    funding: {
      allowed: [
      paypal.FUNDING.CARD,
      paypal.FUNDING.CREDIT
      ],
      disallowed: []
    },
  
    // PayPal Client IDs - replace with your own
    // Create a PayPal app: https://developer.paypal.com/developer/applications/create
    client: {
      sandbox: 'AZDxjDScFpQtjWTOUtWKbyN_bDt4OgqaF4eYXlewfBP4-8aqX3PiV8e1GWU6liB2CUXlkA59kJXE7M6R',
      production: '<insert production client id>'
    },
  
    payment: function (data, actions) {
      return actions.payment.create({
      payment: {
        transactions: [
        {
          amount: {
          total: '{{ TotalPrice }}', //need to insert updated value for total ammount
          currency: 'NOK'
          }
        }
        ]
      }
      });
    },
  
    onAuthorize: function (data, actions) {
      return actions.payment.execute()
      .then(function () {
        function reqListener () {
    console.log(this.responseText);
  }
  var oReq = new XMLHttpRequest();
  oReq.addEventListener("load", reqListener);
  oReq.open("PUT", '/paypal-payment/{{OrderID}}');
  oReq.send();
        window.alert('Payment Complete!');
      });
    }
    }, '#paypal-button');

</script>
      <button id="paypal-button" type="button" name="paypal" </button>
    </div>
    
  </div>
</div>
